{"javascript": "function twoSum(numbers, target) {\n    // numbers: sorted array of integers\n    // target: integer to find sum for\n    // return: array of indices [index1, index2] (1-indexed per LeetCode #167)\n    \n}", "typescript": "function twoSum(numbers: number[], target: number): number[] {\n    // numbers: sorted array of integers\n    // target: integer to find sum for\n    // return: array of indices [index1, index2] (1-indexed per LeetCode #167)\n    \n}", "python": "def twoSum(numbers, target):\n    # numbers: sorted list of integers\n    # target: integer to find sum for\n    # return: list of indices [index1, index2] (1-indexed per LeetCode #167)\n    pass", "java": "class Solution {\n    public int[] twoSum(int[] numbers, int target) {\n        // numbers: sorted array of integers\n        // target: integer to find sum for\n        // return: array of indices [index1, index2] (1-indexed per LeetCode #167)\n        \n    }\n}", "cpp": "class Solution {\npublic:\n    vector<int> twoSum(vector<int>& numbers, int target) {\n        // numbers: sorted vector of integers\n        // target: integer to find sum for\n        // return: vector of indices [index1, index2] (1-indexed per LeetCode #167)\n        \n    }\n};", "c": "int* twoSum(int* numbers, int numbersSize, int target, int* returnSize) {\n    // numbers: sorted array of integers\n    // numbersSize: length of numbers array\n    // target: integer to find sum for\n    // returnSize: pointer to store result array size\n    // return: array of indices [index1, index2] (1-indexed per LeetCode #167)\n    \n}", "go": "func twoSum(numbers []int, target int) []int {\n    // numbers: sorted slice of integers\n    // target: integer to find sum for\n    // return: slice of indices [index1, index2] (1-indexed per LeetCode #167)\n    \n}", "rust": "impl Solution {\n    pub fn two_sum(numbers: Vec<i32>, target: i32) -> Vec<i32> {\n        // numbers: sorted vector of integers\n        // target: integer to find sum for\n        // return: vector of indices [index1, index2] (1-indexed per LeetCode #167)\n        \n    }\n}"}
