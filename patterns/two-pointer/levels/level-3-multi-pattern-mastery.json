{"levelId": "level3", "name": "Multi-Pattern Mastery", "description": "Combine Two Pointer with supporting patterns for real interview scenarios", "objective": "Apply Two Pointer thinking to multi-pattern problems confidently", "estimatedTime": "2-3 hours", "unlockCriteria": {"prerequisites": ["level2_completion"], "userChoice": true, "demonstratedExpertise": 85, "patternFluency": true}, "problems": [{"id": "meeting-rooms-ii", "title": "Meeting Rooms II", "difficulty": "medium", "estimatedTime": "45-60 minutes", "category": "multi-pattern", "description": "Find minimum number of meeting rooms required using two pointers", "filePath": "problems/13-meeting-rooms-ii.md", "testCasesPath": "problems/13-meeting-rooms-ii/test-cases.json", "primaryPattern": "two-pointer", "supportingPatterns": ["sorting", "greedy"], "learningObjectives": ["Combine Two Pointer with sorting strategy", "Apply greedy decision making to pointer movement", "Master interval processing with two pointers", "Handle real-time event simulation"], "tags": ["intervals", "two-pointers", "sorting", "greedy", "simulation"], "leetcodeId": 253, "adaptiveHints": {"sorting": "Just arranges data for your Two Pointer technique", "greedy": "Helps decide pointer movement - same logic you know"}, "patternBreakdown": {"sorting": {"role": "Data preparation", "connection": "Creates the order needed for pointer movement", "quickExplanation": "Think of sorting like organizing meetings in time order"}, "greedy": {"role": "Decision making", "connection": "Decides which pointer to move for optimal solution", "quickExplanation": "Always make the choice that helps your Two Pointer logic most"}, "twoPointer": {"role": "Core algorithm", "connection": "Primary pattern - others support this", "implementation": "One pointer tracks starts, one tracks ends"}}}, {"id": "merge-intervals-optimized", "title": "Merge Intervals (Optimized)", "difficulty": "medium", "estimatedTime": "30-45 minutes", "category": "multi-pattern", "description": "Merge overlapping intervals using two pointers for optimization", "filePath": "problems/14-merge-intervals-optimized.md", "testCasesPath": "problems/14-merge-intervals-optimized/test-cases.json", "prerequisites": ["meeting-rooms-ii"], "primaryPattern": "two-pointer", "supportingPatterns": ["sorting"], "learningObjectives": ["Optimize interval merging with Two Pointer logic", "Apply pointer-based overlap detection", "Master in-place interval processing", "Handle edge cases in interval merging"], "tags": ["intervals", "two-pointers", "sorting", "merging"], "leetcodeId": 56, "adaptiveHints": {"sorting": "Prepares intervals for Two Pointer merging"}, "patternBreakdown": {"sorting": {"role": "Data preparation", "connection": "Enables sequential processing with pointers", "quickExplanation": "Sorts intervals by start time for pointer traversal"}, "twoPointer": {"role": "Core algorithm", "connection": "Drives the merging logic", "implementation": "Compare current and next intervals for overlap"}}}], "successCriteria": {"patternRecognitionSpeed": 30, "implementationAccuracy": 85, "multiPatternThinking": 80, "patternCombination": 85, "realWorldApplication": 80}, "achievements": [{"id": "multi_pattern_master", "name": "Multi-Pattern Master", "description": "Successfully combine Two Pointer with multiple supporting patterns", "unlockCondition": "all_problems_completed && combination_score > 85", "rarity": "rare"}, {"id": "interview_simulator", "name": "Interview Simulator", "description": "Handle real interview scenarios with confidence", "unlockCondition": "interview_simulation_passed && communication_score > 80", "rarity": "epic"}, {"id": "pattern_sensei", "name": "Pattern Sensei", "description": "Master who can teach Two Pointer patterns to others", "unlockCondition": "expert_level && teaching_ability_demonstrated", "rarity": "legendary"}], "expertFeatures": {"multiPatternCombination": true, "realWorldScenarios": true, "interviewSimulation": true, "teachingMode": true, "optimizationAnalysis": true}, "graduation": {"finalAssessment": {"type": "interview_simulation", "duration": "45 minutes", "format": "google_style_interview", "problemCount": 1, "requiresExplanation": true, "requiresOptimization": true, "communicationAssessment": true, "passThreshold": 85}, "nextSteps": {"recommendations": ["Master Sliding Window pattern (builds on Two Pointer)", "Learn Fast & Slow Pointers (advanced Two Pointer variation)", "Study Binary Search (similar strategic thinking)"], "careerReadiness": "Ready for senior-level algorithm interviews"}}, "adaptiveSupport": {"unknownPatternDetection": true, "contextualHints": true, "patternConnectionExplanations": true, "focusOnTwoPointerCore": true}, "teachingPhilosophy": "Focus on how Two Pointer thinking applies to complex scenarios, using supporting patterns as tools rather than separate concepts to master"}
