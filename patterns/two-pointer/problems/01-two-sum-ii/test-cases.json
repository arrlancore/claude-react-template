{
  "metadata": {
    "problemId": "two-sum-ii",
    "inputFormat": "array,number",
    "outputFormat": "array",
    "functionName": "twoSum",
    "comparisonStrategy": "unorderedElementsMatchAny"
  },
  "testCases": [
    {
      "input": {
        "numbers": [
          2,
          7,
          11,
          15
        ],
        "target": 9
      },
      "expected": [
        [1, 2]
      ],
      "explanation": "Basic case: 2 + 7 = 9"
    },
    {
      "input": {
        "numbers": [
          2,
          3,
          4
        ],
        "target": 6
      },
      "expected": [
        [1, 3]
      ],
      "explanation": "Skip middle element: 2 + 4 = 6"
    },
    {
      "input": {
        "numbers": [
          -1,
          0
        ],
        "target": -1
      },
      "expected": [
        [1, 2]
      ],
      "explanation": "Negative numbers: -1 + 0 = -1"
    },
    {
      "input": {
        "numbers": [
          1,
          2
        ],
        "target": 3
      },
      "expected": [
        [1, 2]
      ],
      "explanation": "Minimum array size: 1 + 2 = 3"
    },
    {
      "input": {
        "numbers": [
          -3,
          -1,
          0,
          2,
          4
        ],
        "target": 1
      },
      "expected": [
        [2, 4],
        [1, 5]
      ],
      "explanation": "Mixed negative/positive: -1 + 2 = 1 OR -3 + 4 = 1"
    },
    {
      "input": {
        "numbers": [
          1,
          3,
          3,
          6
        ],
        "target": 6
      },
      "expected": [
        [2, 3]
      ],
      "explanation": "Duplicate values: 3 + 3 = 6"
    },
    {
      "input": {
        "numbers": [
          -5,
          -3,
          -1,
          0,
          2,
          4,
          6
        ],
        "target": -4
      },
      "expected": [
        [2, 3]
      ],
      "explanation": "Large array: -3 + (-1) = -4"
    },
    {
      "input": {
        "numbers": [
          0,
          0,
          3,
          4
        ],
        "target": 0
      },
      "expected": [
        [1, 2]
      ],
      "explanation": "Target zero: 0 + 0 = 0"
    },
    {
      "input": {
        "numbers": [
          1,
          2,
          3,
          4,
          4,
          9,
          56,
          90
        ],
        "target": 8
      },
      "expected": [
        [4, 5]
      ],
      "explanation": "Large array: 4 + 4 = 8"
    },
    {
      "input": {
        "numbers": [
          -10,
          -8,
          -2,
          1,
          2,
          5,
          6
        ],
        "target": 0
      },
      "expected": [
        [3, 5]
      ],
      "explanation": "Wide range: -2 + 2 = 0"
    }
  ]
}
